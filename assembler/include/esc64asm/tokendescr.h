#ifndef TOKENDESCR_INCLUDED
#define TOKENDESCR_INCLUDED

#include <stdlib.h>

#include <esc64asm/esctypes.h>
#include <esc64asm/cmddescr.h>

typedef enum TokenDescrId_
{
	TOKEN_DESCR_NUMBER = 0,
	TOKEN_DESCR_STRING,
	TOKEN_DESCR_LABEL_DECL,
	TOKEN_DESCR_LABEL_REF,
	TOKEN_DESCR_REGISTER_REF,

	TOKEN_DESCR_COMMA,
	TOKEN_DESCR_PAREN_OPEN,
	TOKEN_DESCR_PAREN_CLOSE,

	TOKEN_DESCR_AND,
	TOKEN_DESCR_PLUS,
	TOKEN_DESCR_OR,
	TOKEN_DESCR_NOT,
	TOKEN_DESCR_MINUS,
	TOKEN_DESCR_SUB,
	TOKEN_DESCR_NEG,
	TOKEN_DESCR_DIVIDE,

	TOKEN_DESCR_OPCODE_ADD,
	TOKEN_DESCR_OPCODE_ADC,
	TOKEN_DESCR_OPCODE_SUB,
	TOKEN_DESCR_OPCODE_INC,
	TOKEN_DESCR_OPCODE_DEC,
	TOKEN_DESCR_OPCODE_OR,
	TOKEN_DESCR_OPCODE_XOR,
	TOKEN_DESCR_OPCODE_AND,
	TOKEN_DESCR_OPCODE_SHL,
	TOKEN_DESCR_OPCODE_SHR,
	TOKEN_DESCR_OPCODE_MOV,
	TOKEN_DESCR_OPCODE_MOVZ,
	TOKEN_DESCR_OPCODE_MOVNZ,
	TOKEN_DESCR_OPCODE_MOVC,
	TOKEN_DESCR_OPCODE_MOVNC,
	TOKEN_DESCR_OPCODE_MOVNZC,
	TOKEN_DESCR_OPCODE_MOVZONC,
	TOKEN_DESCR_OPCODE_MOVZOC,
	TOKEN_DESCR_OPCODE_MOVNZNC,
	TOKEN_DESCR_OPCODE_CMP,
	TOKEN_DESCR_OPCODE_LDR,
	TOKEN_DESCR_OPCODE_STR,
	TOKEN_DESCR_OPCODE_CALL,
	TOKEN_DESCR_OPCODE_JMP,
	TOKEN_DESCR_OPCODE_JZ,
	TOKEN_DESCR_OPCODE_JNZ,
	TOKEN_DESCR_OPCODE_JC,
	TOKEN_DESCR_OPCODE_JNC,
	TOKEN_DESCR_OPCODE_PUSH,
	TOKEN_DESCR_OPCODE_POP,

	TOKEN_DESCR_DIR_WORD,
	TOKEN_DESCR_DIR_ASCII,
	TOKEN_DESCR_DIR_GLOBAL,
	TOKEN_DESCR_DIR_SECTION,

	TOKEN_DESCR_EOL,
	TOKEN_DESCR_EOF,

	TOKEN_DESCR_DATA,
	TOKEN_DESCR_BSS,

	//not really descriptors
	TOKEN_DESCR_TABLE_SIZE,
	TOKEN_DESCR_INVALID
} TokenDescrId;

typedef unsigned Operand_t;

typedef enum TokenClass_
{
	TOKEN_CLASS_NONE = 0,
	TOKEN_CLASS_MNEMONIC,
	TOKEN_CLASS_RESERVED_SYM,
	TOKEN_CLASS_DIRECTIVE,
	TOKEN_CLASS_VALUE,
	TOKEN_CLASS_AMBIGUOUS_OPERATOR,
	TOKEN_CLASS_OPERATOR
} TokenClass;

typedef enum TokenValueType_
{
	TOKEN_VALUE_TYPE_NONE = 0,
	TOKEN_VALUE_TYPE_NUMBER,
	TOKEN_VALUE_TYPE_STRING
} TokenValueType;

typedef struct TokenDescr_
{
	const char* name;
	TokenClass tokenClass;
	TokenValueType valueType;
	const void* cmdDescr;
} TokenDescr;

const TokenDescr* GetTokenDescr(TokenDescrId id);

#endif
